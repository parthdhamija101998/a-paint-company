{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\a-paint-company\\\\my-client\\\\src\\\\components\\\\paints-list.component.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Table, TableHead, TableRow, TableCell, TableBody, styled, Button, Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions, TextField, Typography, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { getPaints } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridContainer = styled(Grid)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n});\nconst Container = styled(TextField)`\n  width: 20%;\n  margin: 10px 20px 0 20px;\n`;\nconst Total = styled(Typography)`\n  justifycontent: center;\n  margin: 30px 0 0 20px;\n`;\nconst StyledTable = styled(Table)`\n  width: 90%;\n  margin: 30px auto 0 auto;\n`;\nconst THead = styled(TableRow)`\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background-color: black;\n  & > th {\n    color: white;\n    font-size: 15px;\n  }\n`;\nconst TBody = styled(TableRow)`\n  & > td {\n    font-size: 14px;\n  }\n`;\nconst PaintsList = () => {\n  _s();\n  const [paints, setPaints] = useState([]);\n  useEffect(() => {\n    getAllPaints();\n  }, []);\n  const getAllPaints = async () => {\n    let response = await getPaints();\n    // setPaints(response.data);\n    console.log(response.data);\n    setPaints(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Heylo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(PaintsList, \"mFy0UERgNYdII/dB2JxXQcW943w=\");\n_c = PaintsList;\nexport default PaintsList;\nvar _c;\n$RefreshReg$(_c, \"PaintsList\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableHead","TableRow","TableCell","TableBody","styled","Button","Dialog","DialogTitle","DialogContentText","DialogContent","DialogActions","TextField","Typography","Grid","Link","getPaints","jsxDEV","_jsxDEV","GridContainer","display","justifyContent","alignItems","Container","Total","StyledTable","THead","TBody","PaintsList","_s","paints","setPaints","getAllPaints","response","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/a-paint-company/my-client/src/components/paints-list.component.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  styled,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPaints } from \"../service/api\";\r\n\r\n\r\nconst GridContainer = styled(Grid)({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nconst Container = styled(TextField)`\r\n  width: 20%;\r\n  margin: 10px 20px 0 20px;\r\n`;\r\n\r\nconst Total = styled(Typography)`\r\n  justifycontent: center;\r\n  margin: 30px 0 0 20px;\r\n`;\r\n\r\nconst StyledTable = styled(Table)`\r\n  width: 90%;\r\n  margin: 30px auto 0 auto;\r\n`;\r\nconst THead = styled(TableRow)`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1;\r\n  background-color: black;\r\n  & > th {\r\n    color: white;\r\n    font-size: 15px;\r\n  }\r\n`;\r\nconst TBody = styled(TableRow)`\r\n  & > td {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst PaintsList = () => {\r\n  \r\n  const [paints, setPaints] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    getAllPaints();\r\n  }, []);\r\n  \r\n  const getAllPaints = async () => {\r\n    let response = await getPaints();\r\n    // setPaints(response.data);\r\n    console.log(response.data);\r\n    setPaints(response.data);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <p>Heylo!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SACEC,KAAK,EACLC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,iBAAiB,EACjBC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,UAAU,EACVC,IAAI,QACC,eAAe;AAEtB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,aAAa,GAAGd,MAAM,CAACS,IAAI,CAAC,CAAC;EACjCM,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE;AACd,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGlB,MAAM,CAACO,SAAS,CAAE;AACpC;AACA;AACA,CAAC;AAED,MAAMY,KAAK,GAAGnB,MAAM,CAACQ,UAAU,CAAE;AACjC;AACA;AACA,CAAC;AAED,MAAMY,WAAW,GAAGpB,MAAM,CAACL,KAAK,CAAE;AAClC;AACA;AACA,CAAC;AACD,MAAM0B,KAAK,GAAGrB,MAAM,CAACH,QAAQ,CAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMyB,KAAK,GAAGtB,MAAM,CAACH,QAAQ,CAAE;AAC/B;AACA;AACA;AACA,CAAC;AAED,MAAM0B,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdkC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,QAAQ,GAAG,MAAMjB,SAAS,CAAC,CAAC;IAChC;IACAkB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC1BL,SAAS,CAACE,QAAQ,CAACG,IAAI,CAAC;EAC1B,CAAC;EAGD,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBID,UAAU;AAAAc,EAAA,GAAVd,UAAU;AAuBhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}