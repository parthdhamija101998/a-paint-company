{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\a-paint-company\\\\my-client\\\\src\\\\components\\\\paints-list.component.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { getPaints } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaintsList = () => {\n  _s();\n  const [paints, setPaints] = useState([]);\n  const swimLanes = {\n    \"Available\": [],\n    \"Running Low\": [],\n    \"Out of Stock\": []\n  };\n  paints.forEach(paint => {\n    if (paint.status === \"Running Low\") {\n      swimLanes[\"Running Low\"].push(paint);\n    } else if (paint.status === \"Available\") {\n      swimLanes.Available.push(paint);\n    } else if (paint.status === \"Out of Stock\") {\n      swimLanes[\"Out of Stock\"].push(paint);\n    }\n  });\n  useEffect(() => {\n    getAllPaints();\n  }, []);\n  const getAllPaints = async () => {\n    let response = await getPaints();\n    setPaints(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        margin: \"20px\",\n        width: \"80%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: Object.entries(swimLanes).map((_ref, index) => {\n        let [status, paints] = _ref;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          lg: 4,\n          sx: {\n            borderRight: `1px solid #ccc`,\n            paddingRight: \"10px\",\n            ...(index === Object.entries(swimLanes).length - 1 && {\n              borderRight: \"none\"\n            })\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: paints.map(paint => /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  marginBottom: \"10px\",\n                  border: `5px solid ${paint.color}`\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"div\",\n                    children: [\"Color: \", paint.color]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [\"Quantity: \", paint.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [\"Created By: \", paint.createdBy]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [\"Last Modified By: \", paint.lastModifiedBy]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, paint._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PaintsList, \"mFy0UERgNYdII/dB2JxXQcW943w=\");\n_c = PaintsList;\nexport default PaintsList;\nvar _c;\n$RefreshReg$(_c, \"PaintsList\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","Grid","Link","getPaints","jsxDEV","_jsxDEV","PaintsList","_s","paints","setPaints","swimLanes","forEach","paint","status","push","Available","getAllPaints","response","data","style","width","children","container","spacing","sx","margin","justifyContent","alignItems","Object","entries","map","_ref","index","item","xs","sm","md","lg","borderRight","paddingRight","length","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","border","color","quantity","createdBy","lastModifiedBy","_id","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/a-paint-company/my-client/src/components/paints-list.component.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Card, CardContent, Typography, Grid } from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPaints } from \"../service/api\";\r\n\r\nconst PaintsList = () => {\r\n  const [paints, setPaints] = useState([]);\r\n\r\n  const swimLanes = {\r\n    \"Available\": [],\r\n    \"Running Low\": [],\r\n    \"Out of Stock\": [],\r\n  };\r\n\r\n  paints.forEach((paint) => {\r\n    if (paint.status === \"Running Low\") {\r\n      swimLanes[\"Running Low\"].push(paint);\r\n    } else if (paint.status === \"Available\") {\r\n      swimLanes.Available.push(paint);\r\n    } else if (paint.status === \"Out of Stock\") {\r\n      swimLanes[\"Out of Stock\"].push(paint);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllPaints();\r\n  }, []);\r\n\r\n  const getAllPaints = async () => {\r\n    let response = await getPaints();\r\n    setPaints(response.data);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Grid container spacing={2} sx={{ margin: \"20px\", width: \"80%\" ,justifyContent: \"center\",alignItems: \"center\"  }}>\r\n        {Object.entries(swimLanes).map(([status, paints],index) => (\r\n          <Grid\r\n            item\r\n            key={status}\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            lg={4}\r\n            sx={{\r\n              borderRight: `1px solid #ccc`,\r\n              paddingRight: \"10px\",\r\n              ...(index === Object.entries(swimLanes).length - 1 && {\r\n                borderRight: \"none\",\r\n              }),\r\n            }}\r\n          >\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  {status}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardContent>\r\n                {paints.map((paint) => (\r\n                  <Card\r\n                    key={paint._id}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      marginBottom: \"10px\",\r\n                      border: `5px solid ${paint.color}`,\r\n                    }}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        Color: {paint.color}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">\r\n                        Quantity: {paint.quantity}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">\r\n                        Created By: {paint.createdBy}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">\r\n                        Last Modified By: {paint.lastModifiedBy}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}