{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\a-paint-company\\\\my-client\\\\src\\\\components\\\\login-screen.component.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Container, TextField, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginScreen() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await checkLogin(username, password);\n    if (response !== null) {\n      const params = new URLSearchParams();\n      params.append('username', username);\n      params.append('password', password);\n      params.append('role', response.role);\n      navigate('/all');\n    } else {\n      // Login failed\n      setErrorMessage('Invalid username or password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      align: \"center\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        label: \"Username\",\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        label: \"Password\",\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      align: \"center\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginScreen, \"8U378PBpQ7JiNpIRa9lTFGoSkAQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["useState","useNavigate","Button","Container","TextField","Typography","jsxDEV","_jsxDEV","LoginScreen","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","response","checkLogin","params","URLSearchParams","append","role","maxWidth","children","variant","component","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","label","fullWidth","margin","color","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/a-paint-company/my-client/src/components/login-screen.component.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\nfunction LoginScreen() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const response = await checkLogin(username, password);\r\n\r\n    if (response !== null) {\r\n      const params = new URLSearchParams();\r\n      params.append('username', username);\r\n      params.append('password', password);\r\n      params.append('role', response.role);\r\n\r\n      navigate('/all');\r\n    } else {\r\n      // Login failed\r\n      setErrorMessage('Invalid username or password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h2\" component=\"h2\" align=\"center\">\r\n        Login\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          label=\"Username\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          label=\"Password\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n      {errorMessage && (\r\n        <Typography variant=\"body1\" color=\"error\" align=\"center\">\r\n          {errorMessage}\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}