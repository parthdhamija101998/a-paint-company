{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\a-paint-company\\\\client\\\\src\\\\components\\\\paints-list.component.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardContent, CardActions, Typography, Grid, Button } from \"@mui/material\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { getPaints } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaintsList = () => {\n  _s();\n  const location = useLocation();\n  const {\n    response\n  } = location.state || {};\n  const [paints, setPaints] = useState([]);\n  const [userRole, setUserRole] = useState(\"\");\n  const [userName, setUserName] = useState(\"\"); // Add new state for user name\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (response) {\n      localStorage.setItem(\"user\", JSON.stringify(response));\n      setUserRole(response.role);\n      setUserName(response.name);\n    } else if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUserRole(parsedUser.role);\n      setUserName(parsedUser.name);\n    }\n    getAllPaints();\n  }, []);\n  const getAllPaints = async () => {\n    let response = await getPaints();\n    setPaints(response.data);\n  };\n  const swimLanes = {\n    Available: [],\n    \"Running Low\": [],\n    \"Out of Stock\": []\n  };\n  paints.forEach(paint => {\n    if (paint.status === \"Running Low\") {\n      swimLanes[\"Running Low\"].push(paint);\n    } else if (paint.status === \"Available\") {\n      swimLanes[\"Available\"].push(paint);\n    } else if (paint.status === \"Out of Stock\") {\n      swimLanes[\"Out of Stock\"].push(paint);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [\"Hey `$\", userName, \"`\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        margin: \"20px\",\n        width: \"90%\"\n      },\n      children: Object.entries(swimLanes).map((_ref, index) => {\n        let [status, paints] = _ref;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          lg: 4,\n          sx: {\n            borderRight: `1px solid #ccc`,\n            paddingRight: \"10px\",\n            ...(index === Object.entries(swimLanes).length - 1 && {\n              borderRight: \"none\"\n            })\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            sx: {\n              backgroundColor: \"#C0D5D3\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: paints.map(paint => /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  marginBottom: \"10px\",\n                  border: `5px solid ${paint.color}`\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"div\",\n                    children: paint.color\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [\"Quantity: \", paint.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), userRole === \"Admin\" || userRole === \"Painter\" ? /*#__PURE__*/_jsxDEV(CardActions, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    component: Link,\n                    to: `/update/${paint._id}`,\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this), userRole === \"Painter\" && paint.status !== \"Out of Stock\" && paint.status !== \"Running Low\" ? /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    component: Link,\n                    to: `/update/${paint._id}`,\n                    children: \"RUNNING LOW\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 27\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this) : null]\n              }, paint._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PaintsList, \"vawpXqXeGkoqMSIEOc/6DRCV6+M=\", false, function () {\n  return [useLocation];\n});\n_c = PaintsList;\nexport default PaintsList;\nvar _c;\n$RefreshReg$(_c, \"PaintsList\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","CardActions","Typography","Grid","Button","Link","useLocation","getPaints","jsxDEV","_jsxDEV","PaintsList","_s","location","response","state","paints","setPaints","userRole","setUserRole","userName","setUserName","storedUser","localStorage","getItem","setItem","JSON","stringify","role","name","parsedUser","parse","getAllPaints","data","swimLanes","Available","forEach","paint","status","push","style","width","display","justifyContent","children","variant","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","sx","margin","Object","entries","map","_ref","index","item","xs","sm","md","lg","borderRight","paddingRight","length","backgroundColor","component","marginBottom","border","color","quantity","size","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/a-paint-company/client/src/components/paints-list.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { getPaints } from \"../service/api\";\r\n\r\nconst PaintsList = () => {\r\n  const location = useLocation();\r\n  const { response } = location.state || {};\r\n  const [paints, setPaints] = useState([]);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\"); // Add new state for user name\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (response) {\r\n      localStorage.setItem(\"user\", JSON.stringify(response));\r\n      setUserRole(response.role);\r\n      setUserName(response.name);\r\n    } else if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUserRole(parsedUser.role);\r\n      setUserName(parsedUser.name);\r\n    }\r\n    getAllPaints();\r\n  }, []);\r\n\r\n  const getAllPaints = async () => {\r\n    let response = await getPaints();\r\n    setPaints(response.data);\r\n  };\r\n\r\n  const swimLanes = {\r\n    Available: [],\r\n    \"Running Low\": [],\r\n    \"Out of Stock\": [],\r\n  };\r\n\r\n  paints.forEach((paint) => {\r\n    if (paint.status === \"Running Low\") {\r\n      swimLanes[\"Running Low\"].push(paint);\r\n    } else if (paint.status === \"Available\") {\r\n      swimLanes[\"Available\"].push(paint);\r\n    } else if (paint.status === \"Out of Stock\") {\r\n      swimLanes[\"Out of Stock\"].push(paint);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n      <Typography variant=\"h4\" style={{ marginTop: \"20px\" }}>\r\n        Hey `${userName}`\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{\r\n          margin: \"20px\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        {Object.entries(swimLanes).map(([status, paints], index) => (\r\n          <Grid\r\n            item\r\n            key={status}\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            lg={4}\r\n            sx={{\r\n              borderRight: `1px solid #ccc`,\r\n              paddingRight: \"10px\",\r\n              ...(index === Object.entries(swimLanes).length - 1 && {\r\n                borderRight: \"none\",\r\n              }),\r\n            }}\r\n          >\r\n            <Card\r\n              variant=\"outlined\"\r\n              sx={{\r\n                backgroundColor: \"#C0D5D3\",\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  {status}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardContent>\r\n                {paints.map((paint) => (\r\n                  <Card\r\n                    key={paint._id}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      marginBottom: \"10px\",\r\n                      border: `5px solid ${paint.color}`,\r\n                    }}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        {paint.color}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">\r\n                        Quantity: {paint.quantity}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    {userRole === \"Admin\" || userRole === \"Painter\" ? (\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          component={Link}\r\n                          to={`/update/${paint._id}`}\r\n                        >\r\n                          Update\r\n                        </Button>\r\n                        {userRole === \"Painter\" &&\r\n                        paint.status !== \"Out of Stock\" &&\r\n                        paint.status !== \"Running Low\" ? (\r\n                          <Button\r\n                            size=\"small\"\r\n                            component={Link}\r\n                            to={`/update/${paint._id}`}\r\n                          >\r\n                            RUNNING LOW\r\n                          </Button>\r\n                        ) : null}\r\n                      </CardActions>\r\n                    ) : null}\r\n                  </Card>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}