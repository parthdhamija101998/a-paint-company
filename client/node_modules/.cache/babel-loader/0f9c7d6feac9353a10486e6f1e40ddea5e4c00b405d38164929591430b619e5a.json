{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\a-paint-company\\\\client\\\\src\\\\components\\\\paints-list.component.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardContent, CardActions, Typography, Grid, Button } from \"@mui/material\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { getPaints } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaintsList = () => {\n  _s();\n  const location = useLocation();\n  const {\n    response\n  } = location.state || {};\n  const [paints, setPaints] = useState([]);\n  const [userRole, setUserRole] = useState(\"\");\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (response) {\n      localStorage.setItem(\"user\", JSON.stringify(response));\n      setUserRole(response.role);\n    } else if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUserRole(parsedUser.role);\n    }\n    getAllPaints();\n  }, []);\n  const getAllPaints = async () => {\n    let response = await getPaints();\n    setPaints(response.data);\n  };\n  const swimLanes = {\n    Available: [],\n    \"Running Low\": [],\n    \"Out of Stock\": []\n  };\n  paints.forEach(paint => {\n    if (paint.status === \"Running Low\") {\n      swimLanes[\"Running Low\"].push(paint);\n    } else if (paint.status === \"Available\") {\n      swimLanes[\"Available\"].push(paint);\n    } else if (paint.status === \"Out of Stock\") {\n      swimLanes[\"Out of Stock\"].push(paint);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          margin: \"20px\",\n          width: \"90%\"\n        },\n        children: Object.entries(swimLanes).map((_ref, index) => {\n          let [status, paints] = _ref;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            lg: 4,\n            sx: {\n              borderRight: `1px solid #ccc`,\n              paddingRight: \"10px\",\n              ...(index === Object.entries(swimLanes).length - 1 && {\n                borderRight: \"none\"\n              })\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                backgroundColor: \"#C0D5D3\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"div\",\n                  children: status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: paints.map(paint => /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  sx: {\n                    marginBottom: \"10px\",\n                    border: `5px solid ${paint.color}`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"div\",\n                      children: paint.color\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: [\"Quantity: \", paint.quantity]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 23\n                  }, this), userRole === \"Admin\" || userRole === \"Painter\" ? /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      component: Link,\n                      to: `/update/${paint._id}`,\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 27\n                    }, this), userRole === \"Painter\" && paint.status !== \"Out of Stock\" && paint.status !== \"Running Low\" ? /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      component: Link,\n                      to: `/update/${paint._id}`,\n                      children: \"RUNNING LOW\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this) : null]\n                }, paint._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(PaintsList, \"N23uw2kRyOpFmxXrrT2QdbrTARw=\", false, function () {\n  return [useLocation];\n});\n_c = PaintsList;\nexport default PaintsList;\nvar _c;\n$RefreshReg$(_c, \"PaintsList\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","CardActions","Typography","Grid","Button","Link","useLocation","getPaints","jsxDEV","_jsxDEV","PaintsList","_s","location","response","state","paints","setPaints","userRole","setUserRole","storedUser","localStorage","getItem","setItem","JSON","stringify","role","parsedUser","parse","getAllPaints","data","swimLanes","Available","forEach","paint","status","push","children","style","width","display","justifyContent","container","spacing","sx","margin","Object","entries","map","_ref","index","item","xs","sm","md","lg","borderRight","paddingRight","length","variant","backgroundColor","component","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","border","color","quantity","size","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/a-paint-company/client/src/components/paints-list.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { getPaints } from \"../service/api\";\r\n\r\nconst PaintsList = () => {\r\n  const location = useLocation();\r\n  const { response } = location.state || {};\r\n  const [paints, setPaints] = useState([]);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (response) {\r\n      localStorage.setItem(\"user\", JSON.stringify(response));\r\n      setUserRole(response.role);\r\n    } else if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUserRole(parsedUser.role);\r\n    }\r\n    getAllPaints();\r\n  }, []);\r\n\r\n  const getAllPaints = async () => {\r\n    let response = await getPaints();\r\n    setPaints(response.data);\r\n  };\r\n\r\n  const swimLanes = {\r\n    Available: [],\r\n    \"Running Low\": [],\r\n    \"Out of Stock\": [],\r\n  };\r\n\r\n  paints.forEach((paint) => {\r\n    if (paint.status === \"Running Low\") {\r\n      swimLanes[\"Running Low\"].push(paint);\r\n    } else if (paint.status === \"Available\") {\r\n      swimLanes[\"Available\"].push(paint);\r\n    } else if (paint.status === \"Out of Stock\") {\r\n      swimLanes[\"Out of Stock\"].push(paint);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          sx={{\r\n            margin: \"20px\",\r\n            width: \"90%\",\r\n          }}\r\n        >\r\n          {Object.entries(swimLanes).map(([status, paints], index) => (\r\n            <Grid\r\n              item\r\n              key={status}\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              lg={4}\r\n              sx={{\r\n                borderRight: `1px solid #ccc`,\r\n                paddingRight: \"10px\",\r\n                ...(index === Object.entries(swimLanes).length - 1 && {\r\n                  borderRight: \"none\",\r\n                }),\r\n              }}\r\n            >\r\n              <Card\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: \"#C0D5D3\",\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"div\">\r\n                    {status}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardContent>\r\n                  {paints.map((paint) => (\r\n                    <Card\r\n                      key={paint._id}\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        marginBottom: \"10px\",\r\n                        border: `5px solid ${paint.color}`,\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\" component=\"div\">\r\n                          {paint.color}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                          Quantity: {paint.quantity}\r\n                        </Typography>\r\n                      </CardContent>\r\n                      {userRole === \"Admin\" || userRole === \"Painter\" ? (\r\n                        <CardActions>\r\n                          <Button\r\n                            size=\"small\"\r\n                            component={Link}\r\n                            to={`/update/${paint._id}`}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          {userRole === \"Painter\" &&\r\n                          paint.status !== \"Out of Stock\" &&\r\n                          paint.status !== \"Running Low\" ? (\r\n                            <Button\r\n                              size=\"small\"\r\n                              component={Link}\r\n                              to={`/update/${paint._id}`}\r\n                            >\r\n                              RUNNING LOW\r\n                            </Button>\r\n                          ) : null}\r\n                        </CardActions>\r\n                      ) : null}\r\n                    </Card>\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}